pipeline {
    agent any

    environment {
        // Noms des images Docker
        TEST_IMAGE = 'arxiv-app'
        APP_IMAGE = 'arxiv-app'
        
        // Variables d'accès (Utilisent des identifiants stockés dans Jenkins)
        AWS_ACCESS_KEY_ID     = credentials('AWS_ACCESS_KEY_ID')
        AWS_SECRET_ACCESS_KEY = credentials('AWS_SECRET_ACCESS_KEY')
        
        // Configuration S3
        AWS_DEFAULT_REGION    = 'eu-west-3'
        S3_BUCKET_NAME        = 'bucketarxiv'
    }

    stages {

        stage('Build ETL Application') {
    steps {
        dir('.') { 
            // Utilise le Dockerfile dans 'jenkins/', qui doit être le Dockerfile Python
            sh "docker build -t ${APP_IMAGE} -f jenkins/tests/Dockerfile_test ."
                }
            }
        }

        stage('Run Unit Tests') {
    steps {
        dir('.') {
            
// 2. Commande pour RÉCUPÉRER le rapport (avec un NOUVEAU container)
            // Nous utilisons 'docker cp' pour copier le rapport du conteneur vers le répertoire de travail de Jenkins (l'hôte).
            // Pour cela, nous devons donner un nom au conteneur.
            
            // Nouveau bloc sh pour exécuter Pytest et copier le rapport
            sh '''
            CONTAINER_ID=$(docker run -d \\
                --env AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID} \\
                --env AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY} \\
                --env AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION} \\
                --env S3_BUCKET=${S3_BUCKET_NAME} \\
                arxiv-app /bin/bash -c "PYTHONPATH=/app pytest /app/jenkins/tests/test_fetch_arxiv.py -v --junitxml=/tmp/junit-report.xml")

            docker wait $CONTAINER_ID

            # Copie le rapport de test du conteneur vers le workspace Jenkins
            docker cp $CONTAINER_ID:/tmp/junit-report.xml jenkins/tests/junit-report.xml

            docker rm $CONTAINER_ID
            '''
        }
    }

    post {
        always {
            // Le fichier est maintenant dans jenkins/tests/ sur l'hôte
            junit 'jenkins/tests/junit-report.xml' 
        }
    }
}

     
        stage('Run ETL and Upload to S3') {
            steps {
                dir('.') {
                    echo "Starting ETL Process using ${APP_IMAGE}..."

                    sh """
                    docker run --rm \\
                        --env AWS_ACCESS_KEY_ID='${AWS_ACCESS_KEY_ID}' \\
                        --env AWS_SECRET_ACCESS_KEY='${AWS_SECRET_ACCESS_KEY}' \\
                        --env AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION} \\
                         --env S3_BUCKET=${S3_BUCKET_NAME} \\
                        ${APP_IMAGE} python /app/jenkins/tests/fetch_arxiv_unitaire.py
                    """
                 }
             }
        }
    }

    post {
        success {
            echo '✅ Pipeline completed successfully!'
        }
        failure {
            echo '❌ Pipeline failed.'
        }
    }
}